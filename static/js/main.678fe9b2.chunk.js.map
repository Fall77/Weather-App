{"version":3,"sources":["components/Time.js","components/Weather.js","App.js","index.js"],"names":["Time","className","moment","format","refresh","window","location","reload","CardExampleCard","weatherData","name","Button","inverted","color","circular","icon","onClick","main","temp","humidity","Date","sys","sunrise","toLocaleTimeString","sunset","weather","App","useState","lat","setLat","long","setLong","data","setData","useEffect","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","then","res","json","result","console","log","fetchData","Dimmer","active","Loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIe,SAASA,IACpB,OACI,gCACI,mBAAGC,UAAU,MAAb,SAAoBC,MAASC,OAAO,UACpC,mBAAGF,UAAU,MAAb,SAAoBC,MAASC,OAAO,WCFhD,IAAMC,EAAU,WACZC,OAAOC,SAASC,UAoCLC,EAhCS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAF,OACpB,mCACI,sBAAKR,UAAU,OAAf,UAEI,qBAAKA,UAAU,MAAf,SACI,oBAAGA,UAAU,SAAb,UAAuBQ,EAAYC,KACnC,cAACC,EAAA,EAAD,CAAQV,UAAU,SAASW,UAAQ,EAACC,MAAM,OAAOC,UAAQ,EAACC,KAAK,UAAUC,QAASZ,SAKtF,qBAAKH,UAAU,OAAf,SACI,cAAC,EAAD,MAGJ,sBAAKA,UAAU,OAAf,UACI,oBAAGA,UAAU,OAAb,yBAAiCQ,EAAYQ,KAAKC,KAAlD,YACA,oBAAGjB,UAAU,OAAb,uBAA+BQ,EAAYQ,KAAKE,SAAhD,WAGJ,sBAAKlB,UAAU,OAAf,UACI,0CAAa,IAAImB,KAA+B,IAA1BX,EAAYY,IAAIC,SAAgBC,mBAAmB,YACzE,yCAAY,IAAIH,KAA8B,IAAzBX,EAAYY,IAAIG,QAAeD,mBAAmB,YACvE,8CAAiBd,EAAYgB,QAAQ,GAAGR,iB,kBC3BzC,SAASS,IAAO,IAAD,EAENC,mBAAS,IAFH,mBAErBC,EAFqB,KAEhBC,EAFgB,OAGJF,mBAAS,IAHL,mBAGrBG,EAHqB,KAGfC,EAHe,OAIJJ,mBAAS,IAJL,mBAIrBK,EAJqB,KAIfC,EAJe,KAuB5B,OAjBAC,qBAAU,YACO,uCAAG,sBAAAC,EAAA,6DAChBC,UAAUC,YAAYC,oBAAmB,SAASC,GAChDV,EAAOU,EAASC,OAAOC,UACvBV,EAAQQ,EAASC,OAAOE,cAHV,SAMVC,MAAM,GAAD,OAAIC,0CAAJ,yBAAkDhB,EAAlD,gBAA6DE,EAA7D,+BAAwFc,qCAClGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJf,EAAQe,GACRC,QAAQC,IAAIF,MAVE,2CAAH,qDAafG,KACC,CAACvB,EAAIE,IAGN,qBAAK7B,UAAU,MAAf,SACwB,oBAAb+B,EAAKf,KACZ,cAAC,EAAD,CAASR,YAAauB,IAEtB,8BACE,cAACoB,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,8B,OC9BZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.678fe9b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport './Time.css';\r\n\r\nexport default function Time(){\r\n    return (\r\n        <div>\r\n            <p className=\"day\">{moment().format('dddd')}</p>\r\n            <p className=\"day\">{moment().format('LL')}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './Weather.css';\r\nimport { Button } from 'semantic-ui-react';\r\nimport Time from './Time';\r\n\r\n\r\nconst refresh = () => {\r\n    window.location.reload();\r\n  }\r\n  \r\n\r\nconst CardExampleCard = ({weatherData}) => (\r\n    <>\r\n        <div className=\"main\">\r\n\r\n            <div className=\"top\">\r\n                <p className=\"header\">{weatherData.name} \r\n                <Button className=\"button\" inverted color='blue' circular icon='refresh' onClick={refresh} />\r\n                </p>\r\n            </div>\r\n            \r\n            \r\n            <div className=\"flex\">\r\n                <Time />\r\n            </div>\r\n\r\n            <div className=\"flex\">\r\n                <p className=\"temp\">Temprature: {weatherData.main.temp} &deg;C</p>\r\n                <p className=\"temp\">Humidity: {weatherData.main.humidity} %</p>\r\n            </div>\r\n\r\n            <div className=\"flex\">\r\n                <p>Sunrise: {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString('es-AR')}</p>\r\n                <p>Sunset: {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString('es-AR')}</p>\r\n                <p>Description: {weatherData.weather[0].main}</p>\r\n                \r\n            </div>\r\n\r\n            \r\n        </div>\r\n    </>\r\n)\r\n\r\nexport default CardExampleCard;","import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Weather from './components/Weather';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\n\n\nexport default function App() {\n  \n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\n      .then(res => res.json())\n      .then(result => {\n        setData(result)\n        console.log(result);\n      });\n    }\n    fetchData();\n  }, [lat,long])\n  \n  return (\n    <div className=\"App\">\n      {(typeof data.main != 'undefined') ? (\n        <Weather weatherData={data}/>\n      ): (\n        <div>\n          <Dimmer active>\n            <Loader>Loading..</Loader>\n          </Dimmer>\n       </div>\n     )}\n </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}